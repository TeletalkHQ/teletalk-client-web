export const stuff = {
  errors: {
    blacklistItemExist: {
      isAuthError: false,
      side: "client",
      reason: "blacklistItemExist",
    },
    shouldNotSendBothUserIdAndCellphoneProperties: {
      isAuthError: false,
      side: "client",
      reason: "shouldNotSendBothUserIdAndCellphoneProperties",
    },
    blacklistItemNotExist: {
      isAuthError: false,
      side: "client",
      reason: "blacklistItemNotExist",
    },
    chatNotExist: {
      isAuthError: false,
      side: "client",
      reason: "chatNotExist",
    },
    client_invalid: {
      isAuthError: false,
      side: "client",
      reason: "client_invalid",
    },
    clientCookieRequired: {
      isAuthError: false,
      side: "client",
      reason: "clientCookieRequired",
    },
    clientIdCanNotVerified: {
      isAuthError: false,
      side: "client",
      reason: "clientIdCanNotVerified",
    },
    clientNotFound: {
      isAuthError: false,
      side: "client",
      reason: "clientNotFound",
    },
    clientNotVerified: {
      isAuthError: false,
      side: "client",
      reason: "clientNotVerified",
    },
    contactItemExist: {
      isAuthError: false,
      side: "client",
      reason: "contactItemExist",
    },
    contactItemNotExist: {
      isAuthError: false,
      side: "client",
      reason: "contactItemNotExist",
    },
    cookieIsNotDefined: {
      isAuthError: false,
      side: "client",
      reason: "cookieIsNotDefined",
    },
    countryCodeNotSupported: {
      isAuthError: false,
      side: "client",
      reason: "countryCodeNotSupported",
    },
    countryNameNotSupported: {
      isAuthError: false,
      side: "client",
      reason: "countryNameNotSupported",
    },
    currentClientNotExist: {
      isAuthError: false,
      side: "client",
      reason: "currentClientNotExist",
    },
    currentUserExist: {
      isAuthError: false,
      side: "client",
      reason: "currentUserExist",
    },
    currentUserNotExist: {
      isAuthError: false,
      side: "client",
      reason: "currentUserNotExist",
    },
    eventNotFound: {
      isAuthError: false,
      side: "client",
      reason: "eventNotFound",
    },
    inputDataNotDefined: {
      isAuthError: false,
      side: "client",
      reason: "inputDataNotDefined",
    },
    inputFieldInvalidType: {
      isAuthError: false,
      side: "client",
      reason: "inputFieldInvalidType",
    },
    inputFieldsMissing: {
      isAuthError: false,
      side: "client",
      reason: "inputFieldsMissing",
    },
    inputFieldsOverload: {
      isAuthError: false,
      side: "client",
      reason: "inputFieldsOverload",
    },
    isNotACallback: {
      isAuthError: false,
      side: "client",
      reason: "isNotACallback",
    },
    outputDataNotDefined: {
      isAuthError: false,
      side: "client",
      reason: "outputDataNotDefined",
    },
    outputFieldInvalidType: {
      isAuthError: false,
      side: "server",
      reason: "outputFieldInvalidType",
    },
    outputFieldsMissing: {
      isAuthError: false,
      side: "server",
      reason: "outputFieldsMissing",
    },
    outputFieldsOverload: {
      isAuthError: false,
      side: "server",
      reason: "outputFieldsOverload",
    },
    outputFieldTypeWrong: {
      isAuthError: false,
      side: "server",
      reason: "outputFieldTypeWrong",
    },
    requiredFieldInvalid: {
      isAuthError: false,
      side: "server",
      reason: "requiredFieldInvalid",
    },
    requiredFieldInvalidType: {
      isAuthError: false,
      side: "server",
      reason: "requiredFieldInvalidType",
    },
    requiredFieldsNotDefined: {
      isAuthError: false,
      side: "server",
      reason: "requiredFieldsNotDefined",
    },
    requiredIoFieldIsNotArray: {
      isAuthError: false,
      side: "server",
      reason: "requiredIoFieldIsNotArray",
    },
    requiredIoFieldIsNotObject: {
      isAuthError: false,
      side: "server",
      reason: "requiredIoFieldIsNotObject",
    },
    selfStuff: { isAuthError: false, side: "client", reason: "selfStuff" },
    senderEmpty: { isAuthError: false, side: "client", reason: "senderEmpty" },
    sendJsonResponseIsNotFunction: {
      isAuthError: false,
      side: "server",
      reason: "sendJsonResponseIsNotFunction",
    },
    sendSmsFailed: {
      isAuthError: false,
      side: "server",
      reason: "sendSmsFailed",
    },
    serverCriticalError: {
      isAuthError: false,
      side: "server",
      reason: "serverCriticalError",
    },
    targetUserNotExist: {
      isAuthError: false,
      side: "client",
      reason: "targetUserNotExist",
    },
    unknownError: {
      isAuthError: false,
      side: "server",
      reason: "unknownError",
    },
    userExist: { isAuthError: false, side: "client", reason: "userExist" },
    userNoLongerParticipant: {
      isAuthError: false,
      side: "client",
      reason: "userNoLongerParticipant",
    },
    chatId_type_error: {
      isAuthError: false,
      side: "client",
      reason: "chatId_type_error",
    },
    chatId_required_error: {
      isAuthError: false,
      side: "client",
      reason: "chatId_required_error",
    },
    chatId_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "chatId_empty_error",
    },
    chatId_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "chatId_minLength_error",
    },
    chatId_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "chatId_maxLength_error",
    },
    chatId_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "chatId_unique_error",
    },
    chatId_invalid: {
      isAuthError: false,
      side: "client",
      reason: "chatId_invalid",
    },
    createdAt_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "createdAt_empty_error",
    },
    createdAt_required_error: {
      isAuthError: false,
      side: "client",
      reason: "createdAt_required_error",
    },
    createdAt_type_error: {
      isAuthError: false,
      side: "client",
      reason: "createdAt_type_error",
    },
    createdAt_invalid: {
      isAuthError: false,
      side: "client",
      reason: "createdAt_invalid",
    },
    messageId_type_error: {
      isAuthError: false,
      side: "client",
      reason: "messageId_type_error",
    },
    messageId_required_error: {
      isAuthError: false,
      side: "client",
      reason: "messageId_required_error",
    },
    messageId_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "messageId_empty_error",
    },
    messageId_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "messageId_minLength_error",
    },
    messageId_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "messageId_maxLength_error",
    },
    messageId_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "messageId_unique_error",
    },
    messageId_invalid: {
      isAuthError: false,
      side: "client",
      reason: "messageId_invalid",
    },
    messageText_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "messageText_empty_error",
    },
    messageText_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "messageText_maxLength_error",
    },
    messageText_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "messageText_minLength_error",
    },
    messageText_required_error: {
      isAuthError: false,
      side: "client",
      reason: "messageText_required_error",
    },
    messageText_type_error: {
      isAuthError: false,
      side: "client",
      reason: "messageText_type_error",
    },
    messageText_invalid: {
      isAuthError: false,
      side: "client",
      reason: "messageText_invalid",
    },
    participantId_type_error: {
      isAuthError: false,
      side: "client",
      reason: "participantId_type_error",
    },
    participantId_required_error: {
      isAuthError: false,
      side: "client",
      reason: "participantId_required_error",
    },
    participantId_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "participantId_empty_error",
    },
    participantId_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "participantId_minLength_error",
    },
    participantId_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "participantId_maxLength_error",
    },
    participantId_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "participantId_unique_error",
    },
    participantId_invalid: {
      isAuthError: false,
      side: "client",
      reason: "participantId_invalid",
    },
    senderId_type_error: {
      isAuthError: false,
      side: "client",
      reason: "senderId_type_error",
    },
    senderId_required_error: {
      isAuthError: false,
      side: "client",
      reason: "senderId_required_error",
    },
    senderId_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "senderId_empty_error",
    },
    senderId_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "senderId_minLength_error",
    },
    senderId_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "senderId_maxLength_error",
    },
    senderId_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "senderId_unique_error",
    },
    senderId_invalid: {
      isAuthError: false,
      side: "client",
      reason: "senderId_invalid",
    },
    id_type_error: {
      isAuthError: false,
      side: "client",
      reason: "id_type_error",
    },
    id_required_error: {
      isAuthError: false,
      side: "client",
      reason: "id_required_error",
    },
    id_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "id_empty_error",
    },
    id_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "id_minLength_error",
    },
    id_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "id_maxLength_error",
    },
    id_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "id_unique_error",
    },
    id_invalid: { isAuthError: false, side: "client", reason: "id_invalid" },
    userId_type_error: {
      isAuthError: false,
      side: "client",
      reason: "userId_type_error",
    },
    userId_required_error: {
      isAuthError: false,
      side: "client",
      reason: "userId_required_error",
    },
    userId_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "userId_empty_error",
    },
    userId_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "userId_minLength_error",
    },
    userId_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "userId_maxLength_error",
    },
    userId_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "userId_unique_error",
    },
    userId_invalid: {
      isAuthError: false,
      side: "client",
      reason: "userId_invalid",
    },
    bio_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "bio_empty_error",
    },
    bio_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "bio_maxLength_error",
    },
    bio_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "bio_minLength_error",
    },
    bio_required_error: {
      isAuthError: false,
      side: "client",
      reason: "bio_required_error",
    },
    bio_type_error: {
      isAuthError: false,
      side: "client",
      reason: "bio_type_error",
    },
    bio_invalid: { isAuthError: false, side: "client", reason: "bio_invalid" },
    clientId_type_error: {
      isAuthError: false,
      side: "client",
      reason: "clientId_type_error",
    },
    clientId_required_error: {
      isAuthError: false,
      side: "client",
      reason: "clientId_required_error",
    },
    clientId_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "clientId_empty_error",
    },
    clientId_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "clientId_minLength_error",
    },
    clientId_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "clientId_maxLength_error",
    },
    clientId_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "clientId_unique_error",
    },
    clientId_invalid: {
      isAuthError: false,
      side: "client",
      reason: "clientId_invalid",
    },
    countryCode_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_empty_error",
    },
    countryCode_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_maxLength_error",
    },
    countryCode_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_minLength_error",
    },
    countryCode_numeric_error: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_numeric_error",
    },
    countryCode_required_error: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_required_error",
    },
    countryCode_type_error: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_type_error",
    },
    countryCode_invalid: {
      isAuthError: false,
      side: "client",
      reason: "countryCode_invalid",
    },
    countryName_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "countryName_empty_error",
    },
    countryName_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "countryName_maxLength_error",
    },
    countryName_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "countryName_minLength_error",
    },
    countryName_required_error: {
      isAuthError: false,
      side: "client",
      reason: "countryName_required_error",
    },
    countryName_type_error: {
      isAuthError: false,
      side: "client",
      reason: "countryName_type_error",
    },
    countryName_invalid: {
      isAuthError: false,
      side: "client",
      reason: "countryName_invalid",
    },
    firstName_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "firstName_empty_error",
    },
    firstName_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "firstName_maxLength_error",
    },
    firstName_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "firstName_minLength_error",
    },
    firstName_required_error: {
      isAuthError: false,
      side: "client",
      reason: "firstName_required_error",
    },
    firstName_type_error: {
      isAuthError: false,
      side: "client",
      reason: "firstName_type_error",
    },
    firstName_invalid: {
      isAuthError: false,
      side: "client",
      reason: "firstName_invalid",
    },
    isActive_required_error: {
      isAuthError: false,
      side: "client",
      reason: "isActive_required_error",
    },
    isActive_type_error: {
      isAuthError: false,
      side: "client",
      reason: "isActive_type_error",
    },
    isActive_invalid: {
      isAuthError: false,
      side: "client",
      reason: "isActive_invalid",
    },
    lastName_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "lastName_empty_error",
    },
    lastName_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "lastName_maxLength_error",
    },
    lastName_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "lastName_minLength_error",
    },
    lastName_required_error: {
      isAuthError: false,
      side: "client",
      reason: "lastName_required_error",
    },
    lastName_type_error: {
      isAuthError: false,
      side: "client",
      reason: "lastName_type_error",
    },
    lastName_invalid: {
      isAuthError: false,
      side: "client",
      reason: "lastName_invalid",
    },
    macAddress_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_empty_error",
    },
    macAddress_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_maxLength_error",
    },
    macAddress_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_minLength_error",
    },
    macAddress_required_error: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_required_error",
    },
    macAddress_type_error: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_type_error",
    },
    macAddress_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_unique_error",
    },
    macAddress_invalid: {
      isAuthError: false,
      side: "client",
      reason: "macAddress_invalid",
    },
    phoneNumber_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_empty_error",
    },
    phoneNumber_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_maxLength_error",
    },
    phoneNumber_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_minLength_error",
    },
    phoneNumber_numeric_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_numeric_error",
    },
    phoneNumber_required_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_required_error",
    },
    phoneNumber_type_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_type_error",
    },
    phoneNumber_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_unique_error",
    },
    phoneNumber_invalid: {
      isAuthError: false,
      side: "client",
      reason: "phoneNumber_invalid",
    },
    username_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "username_empty_error",
    },
    username_maxLength_error: {
      isAuthError: false,
      side: "client",
      reason: "username_maxLength_error",
    },
    username_minLength_error: {
      isAuthError: false,
      side: "client",
      reason: "username_minLength_error",
    },
    username_required_error: {
      isAuthError: false,
      side: "client",
      reason: "username_required_error",
    },
    username_type_error: {
      isAuthError: false,
      side: "client",
      reason: "username_type_error",
    },
    username_unique_error: {
      isAuthError: false,
      side: "client",
      reason: "username_unique_error",
    },
    username_invalid: {
      isAuthError: false,
      side: "client",
      reason: "username_invalid",
    },
    verificationCode_empty_error: {
      isAuthError: false,
      side: "client",
      reason: "verificationCode_empty_error",
    },
    verificationCode_length_error: {
      isAuthError: false,
      side: "client",
      reason: "verificationCode_length_error",
    },
    verificationCode_numeric_error: {
      isAuthError: false,
      side: "client",
      reason: "verificationCode_numeric_error",
    },
    verificationCode_required_error: {
      isAuthError: false,
      side: "client",
      reason: "verificationCode_required_error",
    },
    verificationCode_type_error: {
      isAuthError: false,
      side: "client",
      reason: "verificationCode_type_error",
    },
    verificationCode_invalid: {
      isAuthError: false,
      side: "client",
      reason: "verificationCode_invalid",
    },
  },
  models: {
    chatId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    createdAt: { empty: false, required: true, type: "number" },
    messageId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 40,
      maxLength: 45,
      trim: true,
      unique: true,
    },
    messageText: {
      empty: false,
      maxLength: 1000,
      minLength: 1,
      required: true,
      trim: true,
      type: "string",
    },
    participantId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    senderId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    id: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    userId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    bio: {
      defaultValue: "",
      empty: true,
      maxLength: 255,
      minLength: 0,
      required: true,
      trim: true,
      type: "string",
    },
    clientId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 100,
      maxLength: 500,
      trim: true,
      unique: true,
    },
    countryCode: {
      empty: false,
      maxLength: 4,
      minLength: 1,
      numeric: true,
      required: true,
      trim: true,
      type: "string",
    },
    countryName: {
      empty: false,
      maxLength: 50,
      minLength: 2,
      required: true,
      trim: true,
      type: "string",
    },
    firstName: {
      empty: false,
      maxLength: 18,
      minLength: 2,
      required: true,
      trim: true,
      type: "string",
    },
    isActive: { defaultValue: false, required: true, type: "boolean" },
    lastName: {
      empty: true,
      maxLength: 18,
      minLength: 2,
      required: true,
      trim: true,
      type: "string",
    },
    macAddress: {
      empty: false,
      maxLength: 16,
      minLength: 12,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    phoneNumber: {
      empty: false,
      maxLength: 14,
      minLength: 10,
      numeric: true,
      required: true,
      type: "string",
      unique: true,
    },
    username: {
      empty: true,
      maxLength: 12,
      minLength: 0,
      required: true,
      trim: true,
      type: "string",
      unique: false,
    },
    verificationCode: {
      empty: false,
      length: 6,
      numeric: true,
      required: true,
      trim: true,
      type: "string",
    },
  },
  events: [
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
      },
      outputFields: {},
      isAuthRequired: true,
      name: "createNewUser",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {},
      isAuthRequired: true,
      name: "logout",
    },
    {
      method: "customOn",
      inputFields: {
        countryCode: { required: true, type: "string" },
        countryName: { required: true, type: "string" },
        phoneNumber: { required: true, type: "string" },
      },
      outputFields: {},
      isAuthRequired: false,
      name: "signIn",
    },
    {
      method: "customOn",
      inputFields: { verificationCode: { required: true, type: "string" } },
      outputFields: { newUser: { required: true, type: "boolean" } },
      isAuthRequired: true,
      name: "verify",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        countries: {
          required: true,
          type: "array",
          value: [
            {
              countryCode: { required: true, type: "string" },
              countryName: { required: true, type: "string" },
              countryShortName: { required: true, type: "string" },
            },
          ],
        },
      },
      isAuthRequired: false,
      name: "getCountries",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {},
      isAuthRequired: false,
      name: "getStuff",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: { welcomeMessage: { required: true, type: "string" } },
      isAuthRequired: false,
      name: "getWelcomeMessage",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {},
      isAuthRequired: true,
      name: "ping",
    },
    {
      method: "customOn",
      inputFields: { chatId: { required: true, type: "string" } },
      outputFields: {
        chatInfo: {
          required: true,
          type: "object",
          value: {
            chatId: { required: true, type: "string" },
            createdAt: { required: true, type: "number" },
            participants: {
              required: true,
              type: "array",
              value: [{ participantId: { required: true, type: "string" } }],
            },
          },
        },
      },
      isAuthRequired: true,
      name: "getChatInfo",
    },
    {
      method: "customOn",
      inputFields: { chatId: { required: true, type: "string" } },
      outputFields: {
        privateChat: {
          required: true,
          type: "object",
          value: {
            chatId: { required: true, type: "string" },
            createdAt: { required: true, type: "number" },
            messages: {
              required: true,
              type: "array",
              value: [
                {
                  createdAt: { required: true, type: "number" },
                  messageId: { required: true, type: "string" },
                  messageText: { required: true, type: "string" },
                  sender: {
                    required: true,
                    type: "object",
                    value: { senderId: { required: true, type: "string" } },
                  },
                },
              ],
            },
            participants: {
              required: true,
              type: "array",
              value: [{ participantId: { required: true, type: "string" } }],
            },
          },
        },
      },
      isAuthRequired: true,
      name: "getPrivateChat",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        privateChats: {
          required: true,
          type: "array",
          value: [
            {
              chatId: { required: true, type: "string" },
              createdAt: { required: true, type: "number" },
              messages: {
                required: true,
                type: "array",
                value: [
                  {
                    createdAt: { required: true, type: "number" },
                    messageId: { required: true, type: "string" },
                    messageText: { required: true, type: "string" },
                    sender: {
                      required: true,
                      type: "object",
                      value: { senderId: { required: true, type: "string" } },
                    },
                  },
                ],
              },
              participants: {
                required: true,
                type: "array",
                value: [{ participantId: { required: true, type: "string" } }],
              },
            },
          ],
        },
      },
      isAuthRequired: true,
      name: "getPrivateChats",
    },
    {
      method: "once",
      inputFields: {},
      outputFields: {},
      isAuthRequired: true,
      name: "joinRoom",
    },
    {
      method: "customOn",
      inputFields: {
        messageText: { required: true, type: "string" },
        participantId: { required: true, type: "string" },
      },
      outputFields: {
        chatId: { required: true, type: "string" },
        addedMessage: {
          required: true,
          type: "object",
          value: {
            createdAt: { required: true, type: "number" },
            messageId: { required: true, type: "string" },
            messageText: { required: true, type: "string" },
            sender: {
              required: true,
              type: "object",
              value: { senderId: { required: true, type: "string" } },
            },
          },
        },
      },
      isAuthRequired: true,
      name: "sendPrivateMessage",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        blockedUser: {
          required: true,
          type: "object",
          value: { userId: { required: true, type: "string" } },
        },
      },
      isAuthRequired: true,
      name: "addBlock",
    },
    {
      method: "customOn",
      inputFields: {
        countryCode: { required: true, type: "string" },
        countryName: { required: true, type: "string" },
        phoneNumber: { required: true, type: "string" },
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      outputFields: {
        addedContact: {
          required: true,
          type: "object",
          value: {
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "addContact",
    },
    {
      method: "customOn",
      inputFields: {
        countryCode: { required: true, type: "string" },
        countryName: { required: true, type: "string" },
        phoneNumber: { required: true, type: "string" },
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
      },
      outputFields: {
        addedContact: {
          required: true,
          type: "object",
          value: {
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "addContactWithCellphone",
    },
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      outputFields: {
        addedContact: {
          required: true,
          type: "object",
          value: {
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "addContactWithUserId",
    },
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      outputFields: {
        editedContact: {
          required: true,
          type: "object",
          value: {
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "editContact",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        contacts: {
          required: true,
          type: "array",
          value: [
            {
              countryCode: { required: true, type: "string" },
              countryName: { required: true, type: "string" },
              phoneNumber: { required: true, type: "string" },
              firstName: { required: true, type: "string" },
              lastName: { required: true, type: "string" },
              userId: { required: true, type: "string" },
            },
          ],
        },
      },
      isAuthRequired: true,
      name: "getContacts",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        publicUserData: {
          required: true,
          type: "object",
          value: {
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            bio: { required: true, type: "string" },
            userId: { required: true, type: "string" },
            username: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "getPublicUserData",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        user: {
          required: true,
          type: "object",
          value: {
            bio: { required: true, type: "string" },
            blacklist: {
              required: true,
              type: "array",
              value: [
                {
                  countryCode: { required: true, type: "string" },
                  countryName: { required: true, type: "string" },
                  phoneNumber: { required: true, type: "string" },
                },
              ],
            },
            contacts: {
              required: true,
              type: "array",
              value: [
                {
                  countryCode: { required: true, type: "string" },
                  countryName: { required: true, type: "string" },
                  phoneNumber: { required: true, type: "string" },
                  firstName: { required: true, type: "string" },
                  lastName: { required: true, type: "string" },
                  userId: { required: true, type: "string" },
                },
              ],
            },
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            createdAt: { required: true, type: "number" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            status: {
              required: true,
              type: "object",
              value: { isActive: { required: true, type: "boolean" } },
            },
            userId: { required: true, type: "string" },
            username: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "getUserData",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        removedBlock: {
          required: true,
          type: "object",
          value: { userId: { required: true, type: "string" } },
        },
      },
      isAuthRequired: true,
      name: "removeBlock",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        removedContact: {
          required: true,
          type: "object",
          value: { userId: { required: true, type: "string" } },
        },
      },
      isAuthRequired: true,
      name: "removeContact",
    },
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        bio: { required: true, type: "string" },
        username: { required: true, type: "string" },
      },
      outputFields: {
        publicUserData: {
          required: true,
          type: "object",
          value: {
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            bio: { required: true, type: "string" },
            status: {
              required: true,
              type: "object",
              value: { isActive: { required: true, type: "boolean" } },
            },
            userId: { required: true, type: "string" },
            username: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "updatePublicUserData",
    },
  ],
  validationModels: {
    chatId: {
      messages: {
        stringEmpty: "chatId_empty_error",
        stringMax: "chatId_maxLength_error",
        stringMin: "chatId_minLength_error",
        required: "chatId_required_error",
        string: "chatId_type_error",
        unique: "chatId_unique_error",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    createdAt: {
      messages: {
        stringEmpty: "createdAt_empty_error",
        required: "createdAt_required_error",
        string: "createdAt_type_error",
      },
      empty: false,
      required: true,
      type: "number",
    },
    messageId: {
      messages: {
        stringEmpty: "messageId_empty_error",
        stringMax: "messageId_maxLength_error",
        stringMin: "messageId_minLength_error",
        required: "messageId_required_error",
        string: "messageId_type_error",
        unique: "messageId_unique_error",
      },
      empty: false,
      max: 45,
      min: 40,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    messageText: {
      messages: {
        stringEmpty: "messageText_empty_error",
        stringMax: "messageText_maxLength_error",
        stringMin: "messageText_minLength_error",
        required: "messageText_required_error",
        string: "messageText_type_error",
      },
      empty: false,
      max: 1000,
      min: 1,
      required: true,
      trim: true,
      type: "string",
    },
    participantId: {
      messages: {
        stringEmpty: "participantId_empty_error",
        stringMax: "participantId_maxLength_error",
        stringMin: "participantId_minLength_error",
        required: "participantId_required_error",
        string: "participantId_type_error",
        unique: "participantId_unique_error",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    senderId: {
      messages: {
        stringEmpty: "senderId_empty_error",
        stringMax: "senderId_maxLength_error",
        stringMin: "senderId_minLength_error",
        required: "senderId_required_error",
        string: "senderId_type_error",
        unique: "senderId_unique_error",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    id: {
      messages: {
        stringEmpty: "id_empty_error",
        stringMax: "id_maxLength_error",
        stringMin: "id_minLength_error",
        required: "id_required_error",
        string: "id_type_error",
        unique: "id_unique_error",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    userId: {
      messages: {
        stringEmpty: "userId_empty_error",
        stringMax: "userId_maxLength_error",
        stringMin: "userId_minLength_error",
        required: "userId_required_error",
        string: "userId_type_error",
        unique: "userId_unique_error",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    bio: {
      messages: {
        stringEmpty: "bio_empty_error",
        stringMax: "bio_maxLength_error",
        stringMin: "bio_minLength_error",
        required: "bio_required_error",
        string: "bio_type_error",
      },
      empty: true,
      max: 255,
      min: 0,
      required: true,
      trim: true,
      type: "string",
    },
    clientId: {
      messages: {
        stringEmpty: "clientId_empty_error",
        stringMax: "clientId_maxLength_error",
        stringMin: "clientId_minLength_error",
        required: "clientId_required_error",
        string: "clientId_type_error",
        unique: "clientId_unique_error",
      },
      empty: false,
      max: 500,
      min: 100,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    countryCode: {
      messages: {
        stringEmpty: "countryCode_empty_error",
        stringMax: "countryCode_maxLength_error",
        stringMin: "countryCode_minLength_error",
        stringNumeric: "countryCode_numeric_error",
        required: "countryCode_required_error",
        string: "countryCode_type_error",
      },
      empty: false,
      max: 4,
      min: 1,
      numeric: true,
      required: true,
      trim: true,
      type: "string",
    },
    countryName: {
      messages: {
        stringEmpty: "countryName_empty_error",
        stringMax: "countryName_maxLength_error",
        stringMin: "countryName_minLength_error",
        required: "countryName_required_error",
        string: "countryName_type_error",
      },
      empty: false,
      max: 50,
      min: 2,
      required: true,
      trim: true,
      type: "string",
    },
    firstName: {
      messages: {
        stringEmpty: "firstName_empty_error",
        stringMax: "firstName_maxLength_error",
        stringMin: "firstName_minLength_error",
        required: "firstName_required_error",
        string: "firstName_type_error",
      },
      empty: false,
      max: 18,
      min: 2,
      required: true,
      trim: true,
      type: "string",
    },
    isActive: {
      messages: {
        required: "isActive_required_error",
        string: "isActive_type_error",
      },
      required: true,
      type: "boolean",
    },
    lastName: {
      messages: {
        stringEmpty: "lastName_empty_error",
        stringMax: "lastName_maxLength_error",
        stringMin: "lastName_minLength_error",
        required: "lastName_required_error",
        string: "lastName_type_error",
      },
      empty: true,
      max: 18,
      min: 2,
      required: true,
      trim: true,
      type: "string",
    },
    macAddress: {
      messages: {
        stringEmpty: "macAddress_empty_error",
        stringMax: "macAddress_maxLength_error",
        stringMin: "macAddress_minLength_error",
        required: "macAddress_required_error",
        string: "macAddress_type_error",
        unique: "macAddress_unique_error",
      },
      empty: false,
      max: 16,
      min: 12,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    phoneNumber: {
      messages: {
        stringEmpty: "phoneNumber_empty_error",
        stringMax: "phoneNumber_maxLength_error",
        stringMin: "phoneNumber_minLength_error",
        stringNumeric: "phoneNumber_numeric_error",
        required: "phoneNumber_required_error",
        string: "phoneNumber_type_error",
        unique: "phoneNumber_unique_error",
      },
      empty: false,
      max: 14,
      min: 10,
      numeric: true,
      required: true,
      type: "string",
      unique: true,
    },
    username: {
      messages: {
        stringEmpty: "username_empty_error",
        stringMax: "username_maxLength_error",
        stringMin: "username_minLength_error",
        required: "username_required_error",
        string: "username_type_error",
        unique: "username_unique_error",
      },
      empty: true,
      max: 12,
      min: 0,
      required: true,
      trim: true,
      type: "string",
      unique: false,
    },
    verificationCode: {
      messages: {
        stringEmpty: "verificationCode_empty_error",
        length: "verificationCode_length_error",
        stringNumeric: "verificationCode_numeric_error",
        required: "verificationCode_required_error",
        string: "verificationCode_type_error",
      },
      empty: false,
      length: 6,
      numeric: true,
      required: true,
      trim: true,
      type: "string",
    },
  },
} as const;
