export const stuff = {
  errors: [
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_MIN_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_MAX_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CHAT_ID_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "CREATED_AT_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CREATED_AT_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CREATED_AT_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CREATED_AT_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_ID_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_ID_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_ID_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MESSAGE_ID_MAX_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MESSAGE_ID_MIN_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_ID_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_ID_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGES_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGES_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGES_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGES_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_TEXT_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MESSAGE_TEXT_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_TEXT_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MESSAGE_TEXT_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MESSAGE_TEXT_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "MESSAGE_TEXT_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "PARTICIPANT_ID_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PARTICIPANT_ID_REQUIRED_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PARTICIPANT_ID_EMPTY_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PARTICIPANT_ID_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PARTICIPANT_ID_MAX_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PARTICIPANT_ID_UNIQUE_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "PARTICIPANT_ID_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "PARTICIPANTS_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PARTICIPANTS_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "PARTICIPANTS_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "PARTICIPANTS_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "PARTICIPANTS_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "PRIVATE_CHATS_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PRIVATE_CHATS_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "PRIVATE_CHATS_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "SENDER_ID_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "SENDER_ID_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "SENDER_ID_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "SENDER_ID_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "SENDER_ID_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "SENDER_ID_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "SENDER_ID_INVALID" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_TYPE_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_REQUIRED_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_EMPTY_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_MAX_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_UNIQUE_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_PARTICIPANT_ID_INVALID",
    },
    { isAuthError: false, side: "CLIENT", reason: "ID_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "ID_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "ID_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "ID_MIN_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "ID_MAX_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "ID_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "ID_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "BIO_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BIO_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BIO_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BIO_MIN_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BIO_MAX_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BIO_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "AVATAR_SRC_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "AVATAR_SRC_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "AVATAR_SRC_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "AVATAR_SRC_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "AVATAR_SRC_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "AVATAR_SRC_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "BLACKLIST_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BLACKLIST_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BLACKLIST_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "BLACKLIST_INVALID" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_ID_TYPE_ERROR" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_ID_EMPTY_ERROR" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_ID_REQUIRED_ERROR" },
    {
      isAuthError: true,
      side: "CLIENT",
      reason: "SESSION_ID_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: true,
      side: "CLIENT",
      reason: "SESSION_ID_MAX_LENGTH_ERROR",
    },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_ID_UNIQUE_ERROR" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_ID_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "SESSIONS_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "SESSIONS_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "SESSIONS_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "SESSIONS_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "CONTACTS_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CONTACTS_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CONTACTS_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "CONTACTS_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "COUNTRY_CODE_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_CODE_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "COUNTRY_CODE_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_CODE_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_CODE_MAX_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_CODE_NUMERIC_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "COUNTRY_CODE_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "COUNTRY_NAME_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_NAME_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "COUNTRY_NAME_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_NAME_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_NAME_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "COUNTRY_NAME_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "FIRST_NAME_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "FIRST_NAME_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "FIRST_NAME_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "FIRST_NAME_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "FIRST_NAME_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "FIRST_NAME_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "IS_ACTIVE_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "IS_ACTIVE_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "IS_ACTIVE_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "LAST_NAME_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "LAST_NAME_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "LAST_NAME_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "LAST_NAME_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "LAST_NAME_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "LAST_NAME_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "MAC_ADDRESS_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MAC_ADDRESS_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "MAC_ADDRESS_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MAC_ADDRESS_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "MAC_ADDRESS_MAX_LENGTH_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "MAC_ADDRESS_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "MAC_ADDRESS_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "PHONE_NUMBER_TYPE_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PHONE_NUMBER_REQUIRED_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "PHONE_NUMBER_EMPTY_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PHONE_NUMBER_MIN_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PHONE_NUMBER_MAX_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "PHONE_NUMBER_NUMERIC_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "PHONE_NUMBER_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "PHONE_NUMBER_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "STATUS_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "STATUS_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "STATUS_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_MIN_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_MAX_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_ID_INVALID" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_TYPE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_REQUIRED_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_EMPTY_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_MIN_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_MAX_LENGTH_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_UNIQUE_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USERNAME_INVALID" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "VERIFICATION_CODE_TYPE_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "VERIFICATION_CODE_REQUIRED_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "VERIFICATION_CODE_EMPTY_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "VERIFICATION_CODE_LENGTH_ERROR",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "VERIFICATION_CODE_NUMERIC_ERROR",
    },
    { isAuthError: false, side: "CLIENT", reason: "VERIFICATION_CODE_INVALID" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_COOKIE_REQUIRED" },
    { isAuthError: false, side: "CLIENT", reason: "BLACKLIST_ITEM_EXIST" },
    { isAuthError: false, side: "CLIENT", reason: "BLACKLIST_ITEM_NOT_EXIST" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "TARGET_USER_IS_BLACKLISTED",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "CURRENT_USER_IS_BLACKLISTED",
    },
    { isAuthError: false, side: "CLIENT", reason: "PRIVATE_CHAT_NOT_EXIST" },
    { isAuthError: false, side: "CLIENT", reason: "PRIVATE_CHAT_EXIST" },
    {
      isAuthError: true,
      side: "CLIENT",
      reason: "SESSION_ID_CAN_NOT_VERIFIED",
    },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_INVALID" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_NOT_FOUND" },
    { isAuthError: true, side: "CLIENT", reason: "SESSION_NOT_VERIFIED" },
    { isAuthError: false, side: "CLIENT", reason: "CONTACT_ITEM_EXIST" },
    { isAuthError: false, side: "CLIENT", reason: "CONTACT_ITEM_NOT_EXIST" },
    { isAuthError: true, side: "CLIENT", reason: "COOKIE_IS_NOT_DEFINED" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_CODE_NOT_SUPPORTED",
    },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "COUNTRY_NAME_NOT_SUPPORTED",
    },
    { isAuthError: true, side: "CLIENT", reason: "CURRENT_SESSION_NOT_EXIST" },
    { isAuthError: false, side: "CLIENT", reason: "CURRENT_USER_EXIST" },
    { isAuthError: true, side: "CLIENT", reason: "CURRENT_USER_NOT_EXIST" },
    { isAuthError: false, side: "CLIENT", reason: "EVENT_NOT_FOUND" },
    { isAuthError: false, side: "CLIENT", reason: "INPUT_DATA_NOT_DEFINED" },
    { isAuthError: false, side: "CLIENT", reason: "INPUT_FIELD_INVALID_TYPE" },
    { isAuthError: false, side: "CLIENT", reason: "INPUT_FIELDS_MISSING" },
    { isAuthError: false, side: "CLIENT", reason: "INPUT_FIELDS_OVERLOAD" },
    { isAuthError: false, side: "CLIENT", reason: "IS_NOT_A_CALLBACK" },
    { isAuthError: false, side: "CLIENT", reason: "OUTPUT_DATA_NOT_DEFINED" },
    { isAuthError: false, side: "SERVER", reason: "OUTPUT_FIELD_INVALID_TYPE" },
    { isAuthError: false, side: "SERVER", reason: "OUTPUT_FIELD_TYPE_WRONG" },
    { isAuthError: false, side: "SERVER", reason: "OUTPUT_FIELDS_MISSING" },
    { isAuthError: false, side: "SERVER", reason: "OUTPUT_FIELDS_OVERLOAD" },
    {
      isAuthError: false,
      side: "SERVER",
      reason: "REQUIRED_FIELD_INVALID_TYPE",
    },
    { isAuthError: false, side: "SERVER", reason: "REQUIRED_FIELD_INVALID" },
    {
      isAuthError: false,
      side: "SERVER",
      reason: "REQUIRED_FIELDS_NOT_DEFINED",
    },
    {
      isAuthError: false,
      side: "SERVER",
      reason: "REQUIRED_IO_FIELD_IS_NOT_ARRAY",
    },
    {
      isAuthError: false,
      side: "SERVER",
      reason: "REQUIRED_IO_FIELD_IS_NOT_OBJECT",
    },
    { isAuthError: false, side: "CLIENT", reason: "SELF_DATA_REQUESTED" },
    {
      isAuthError: false,
      side: "SERVER",
      reason: "SEND_JSON_RESPONSE_IS_NOT_FUNCTION",
    },
    { isAuthError: false, side: "SERVER", reason: "SEND_SMS_FAILED" },
    { isAuthError: false, side: "CLIENT", reason: "SENDER_EMPTY" },
    { isAuthError: false, side: "SERVER", reason: "SERVER_CRITICAL_ERROR" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "SHOULD_NOT_SEND_BOTH_USER_ID_AND_CELLPHONE_PROPERTIES",
    },
    { isAuthError: false, side: "CLIENT", reason: "TARGET_USER_NOT_EXIST" },
    { isAuthError: false, side: "SERVER", reason: "UNKNOWN_ERROR" },
    { isAuthError: false, side: "CLIENT", reason: "USER_EXIST" },
    {
      isAuthError: false,
      side: "CLIENT",
      reason: "USER_NO_LONGER_PARTICIPANT",
    },
  ],
  models: {
    chatId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    createdAt: { type: "number", required: true, empty: false },
    messageId: {
      type: "string",
      required: true,
      empty: false,
      maxLength: 45,
      minLength: 40,
      trim: true,
      unique: true,
    },
    messages: { type: "array", required: true, empty: true },
    messageText: {
      type: "string",
      required: true,
      empty: false,
      minLength: 1,
      maxLength: 1000,
      trim: true,
    },
    participantId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    participants: { type: "array", required: true, length: 2, empty: false },
    privateChats: { type: "array", required: true },
    senderId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    targetParticipantId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    id: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    bio: {
      type: "string",
      required: true,
      empty: true,
      trim: true,
      minLength: 0,
      defaultValue: "",
      maxLength: 255,
    },
    avatarSrc: {
      type: "string",
      required: true,
      empty: true,
      defaultValue: "",
      trim: true,
      minLength: 0,
      maxLength: 800000,
    },
    blacklist: { type: "array", required: true, empty: true },
    sessionId: {
      type: "string",
      empty: false,
      required: true,
      minLength: 100,
      maxLength: 150,
      unique: true,
      trim: true,
    },
    sessions: { type: "array", required: true, empty: true },
    contacts: { type: "array", required: true, empty: true },
    countryCode: {
      type: "string",
      required: true,
      empty: false,
      minLength: 1,
      maxLength: 4,
      numeric: true,
      trim: true,
    },
    countryName: {
      type: "string",
      required: true,
      empty: false,
      minLength: 2,
      maxLength: 50,
      trim: true,
    },
    firstName: {
      type: "string",
      required: true,
      empty: false,
      minLength: 2,
      maxLength: 18,
      trim: true,
    },
    isActive: { type: "boolean", required: true, defaultValue: false },
    lastName: {
      type: "string",
      required: true,
      empty: true,
      minLength: 2,
      maxLength: 18,
      trim: true,
    },
    macAddress: {
      type: "string",
      required: true,
      empty: false,
      minLength: 12,
      maxLength: 16,
      trim: true,
      unique: true,
    },
    phoneNumber: {
      type: "string",
      required: true,
      empty: false,
      minLength: 10,
      maxLength: 14,
      numeric: true,
      unique: true,
    },
    status: { type: "object", required: true },
    userId: {
      type: "string",
      required: true,
      empty: false,
      minLength: 30,
      maxLength: 35,
      trim: true,
      unique: true,
    },
    username: {
      type: "string",
      required: true,
      empty: true,
      minLength: 0,
      maxLength: 12,
      unique: false,
      trim: true,
    },
    verificationCode: {
      type: "string",
      required: true,
      empty: false,
      length: 6,
      numeric: true,
      trim: true,
    },
  },
  events: [
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
      },
      outputFields: { session: { required: true, type: "string" } },
      isAuthRequired: true,
      name: "createNewUser",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {},
      isAuthRequired: true,
      name: "logout",
    },
    {
      method: "customOn",
      inputFields: {
        countryCode: { required: true, type: "string" },
        countryName: { required: true, type: "string" },
        phoneNumber: { required: true, type: "string" },
      },
      outputFields: { session: { required: true, type: "string" } },
      isAuthRequired: false,
      name: "signIn",
    },
    {
      method: "customOn",
      inputFields: { verificationCode: { required: true, type: "string" } },
      outputFields: {
        newUser: { required: true, type: "boolean" },
        session: { required: true, type: "string" },
      },
      isAuthRequired: true,
      name: "verify",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        countries: {
          required: true,
          type: "array",
          value: [
            {
              countryCode: { required: true, type: "string" },
              countryName: { required: true, type: "string" },
              countryShortName: { required: true, type: "string" },
            },
          ],
        },
      },
      isAuthRequired: false,
      name: "getCountries",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {},
      isAuthRequired: false,
      name: "getStuff",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: { welcomeMessage: { required: true, type: "string" } },
      isAuthRequired: false,
      name: "getWelcomeMessage",
    },
    {
      method: "once",
      inputFields: {},
      outputFields: {},
      isAuthRequired: true,
      name: "join",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: { pong: { required: true, type: "string" } },
      isAuthRequired: false,
      name: "ping",
    },
    {
      method: "customOn",
      inputFields: { chatId: { required: true, type: "string" } },
      outputFields: {
        chatInfo: {
          required: true,
          type: "object",
          value: {
            chatId: { required: true, type: "string" },
            createdAt: { required: true, type: "number" },
            participants: {
              required: true,
              type: "array",
              value: [{ participantId: { required: true, type: "string" } }],
            },
          },
        },
      },
      isAuthRequired: true,
      name: "getChatInfo",
    },
    {
      method: "customOn",
      inputFields: { chatId: { required: true, type: "string" } },
      outputFields: {
        privateChat: {
          required: true,
          type: "object",
          value: {
            chatId: { required: true, type: "string" },
            createdAt: { required: true, type: "number" },
            messages: {
              required: true,
              type: "array",
              value: [
                {
                  createdAt: { required: true, type: "number" },
                  messageId: { required: true, type: "string" },
                  messageText: { required: true, type: "string" },
                  sender: {
                    required: true,
                    type: "object",
                    value: { senderId: { required: true, type: "string" } },
                  },
                },
              ],
            },
            participants: {
              required: true,
              type: "array",
              value: [{ participantId: { required: true, type: "string" } }],
            },
          },
        },
      },
      isAuthRequired: true,
      name: "getPrivateChat",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        privateChats: {
          required: true,
          type: "array",
          value: [
            {
              chatId: { required: true, type: "string" },
              createdAt: { required: true, type: "number" },
              messages: {
                required: true,
                type: "array",
                value: [
                  {
                    createdAt: { required: true, type: "number" },
                    messageId: { required: true, type: "string" },
                    messageText: { required: true, type: "string" },
                    sender: {
                      required: true,
                      type: "object",
                      value: { senderId: { required: true, type: "string" } },
                    },
                  },
                ],
              },
              participants: {
                required: true,
                type: "array",
                value: [{ participantId: { required: true, type: "string" } }],
              },
            },
          ],
        },
      },
      isAuthRequired: true,
      name: "getPrivateChats",
    },
    {
      method: "customOn",
      inputFields: {
        messageText: { required: true, type: "string" },
        targetParticipantId: { required: true, type: "string" },
      },
      outputFields: {
        chatId: { required: true, type: "string" },
        addedMessage: {
          required: true,
          type: "object",
          value: {
            createdAt: { required: true, type: "number" },
            messageId: { required: true, type: "string" },
            messageText: { required: true, type: "string" },
            sender: {
              required: true,
              type: "object",
              value: { senderId: { required: true, type: "string" } },
            },
          },
        },
      },
      isAuthRequired: true,
      name: "sendMessage",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        blockedUser: {
          required: true,
          type: "object",
          value: { userId: { required: true, type: "string" } },
        },
      },
      isAuthRequired: true,
      name: "addBlock",
    },
    {
      method: "customOn",
      inputFields: {
        countryCode: { required: true, type: "string" },
        countryName: { required: true, type: "string" },
        phoneNumber: { required: true, type: "string" },
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
      },
      outputFields: {
        newContact: {
          required: true,
          type: "object",
          value: {
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "addContactWithCellphone",
    },
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      outputFields: {
        newContact: {
          required: true,
          type: "object",
          value: {
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "addContactWithUserId",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {},
      isAuthRequired: false,
      name: "disconnect",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        avatarSrc: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      isAuthRequired: true,
      name: "getAvatar",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        isOnline: { required: true, type: "boolean" },
        userId: { required: true, type: "string" },
      },
      isAuthRequired: true,
      name: "getClientStatus",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        contacts: {
          required: true,
          type: "array",
          value: [
            {
              countryCode: { required: true, type: "string" },
              countryName: { required: true, type: "string" },
              phoneNumber: { required: true, type: "string" },
              firstName: { required: true, type: "string" },
              lastName: { required: true, type: "string" },
              userId: { required: true, type: "string" },
            },
          ],
        },
      },
      isAuthRequired: true,
      name: "getContacts",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        onlineClients: {
          required: true,
          type: "array",
          value: [{ userId: { required: true, type: "string" } }],
        },
      },
      isAuthRequired: true,
      name: "getOnlineClients",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        publicData: {
          required: true,
          type: "object",
          value: {
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            bio: { required: true, type: "string" },
            userId: { required: true, type: "string" },
            username: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "getPublicData",
    },
    {
      method: "customOn",
      inputFields: {},
      outputFields: {
        user: {
          required: true,
          type: "object",
          value: {
            avatarSrc: { required: true, type: "string" },
            bio: { required: true, type: "string" },
            blacklist: {
              required: true,
              type: "array",
              value: [{ userId: { required: true, type: "string" } }],
            },
            contacts: {
              required: true,
              type: "array",
              value: [
                {
                  countryCode: { required: true, type: "string" },
                  countryName: { required: true, type: "string" },
                  phoneNumber: { required: true, type: "string" },
                  firstName: { required: true, type: "string" },
                  lastName: { required: true, type: "string" },
                  userId: { required: true, type: "string" },
                },
              ],
            },
            countryCode: { required: true, type: "string" },
            countryName: { required: true, type: "string" },
            createdAt: { required: true, type: "number" },
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            phoneNumber: { required: true, type: "string" },
            status: {
              required: true,
              type: "object",
              value: { isActive: { required: true, type: "boolean" } },
            },
            userId: { required: true, type: "string" },
            username: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "getUserData",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        removedBlock: {
          required: true,
          type: "object",
          value: { userId: { required: true, type: "string" } },
        },
      },
      isAuthRequired: true,
      name: "removeBlock",
    },
    {
      method: "customOn",
      inputFields: { userId: { required: true, type: "string" } },
      outputFields: {
        removedContact: {
          required: true,
          type: "object",
          value: { userId: { required: true, type: "string" } },
        },
      },
      isAuthRequired: true,
      name: "removeContact",
    },
    {
      method: "customOn",
      inputFields: { avatarSrc: { required: true, type: "string" } },
      outputFields: {
        avatarSrc: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      isAuthRequired: true,
      name: "updateAvatar",
    },
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        userId: { required: true, type: "string" },
      },
      outputFields: {
        updatedContact: {
          required: true,
          type: "object",
          value: {
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            userId: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "updateContact",
    },
    {
      method: "customOn",
      inputFields: {
        firstName: { required: true, type: "string" },
        lastName: { required: true, type: "string" },
        bio: { required: true, type: "string" },
        username: { required: true, type: "string" },
      },
      outputFields: {
        userPublicData: {
          required: true,
          type: "object",
          value: {
            firstName: { required: true, type: "string" },
            lastName: { required: true, type: "string" },
            bio: { required: true, type: "string" },
            userId: { required: true, type: "string" },
            username: { required: true, type: "string" },
          },
        },
      },
      isAuthRequired: true,
      name: "updatePublicData",
    },
  ],
  validationModels: {
    chatId: {
      messages: {
        stringEmpty: "CHAT_ID_EMPTY_ERROR",
        stringMax: "CHAT_ID_MAX_LENGTH_ERROR",
        stringMin: "CHAT_ID_MIN_LENGTH_ERROR",
        required: "CHAT_ID_REQUIRED_ERROR",
        string: "CHAT_ID_TYPE_ERROR",
        unique: "CHAT_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    createdAt: {
      messages: {
        stringEmpty: "CREATED_AT_EMPTY_ERROR",
        required: "CREATED_AT_REQUIRED_ERROR",
        string: "CREATED_AT_TYPE_ERROR",
      },
      empty: false,
      required: true,
      type: "number",
    },
    messageId: {
      messages: {
        stringEmpty: "MESSAGE_ID_EMPTY_ERROR",
        stringMax: "MESSAGE_ID_MAX_LENGTH_ERROR",
        stringMin: "MESSAGE_ID_MIN_LENGTH_ERROR",
        required: "MESSAGE_ID_REQUIRED_ERROR",
        string: "MESSAGE_ID_TYPE_ERROR",
        unique: "MESSAGE_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 45,
      min: 40,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    messages: {
      messages: {
        stringEmpty: "MESSAGES_EMPTY_ERROR",
        required: "MESSAGES_REQUIRED_ERROR",
        string: "MESSAGES_TYPE_ERROR",
      },
      empty: true,
      required: true,
      type: "array",
    },
    messageText: {
      messages: {
        stringEmpty: "MESSAGE_TEXT_EMPTY_ERROR",
        stringMax: "MESSAGE_TEXT_MAX_LENGTH_ERROR",
        stringMin: "MESSAGE_TEXT_MIN_LENGTH_ERROR",
        required: "MESSAGE_TEXT_REQUIRED_ERROR",
        string: "MESSAGE_TEXT_TYPE_ERROR",
      },
      empty: false,
      max: 1000,
      min: 1,
      required: true,
      trim: true,
      type: "string",
    },
    participantId: {
      messages: {
        stringEmpty: "PARTICIPANT_ID_EMPTY_ERROR",
        stringMax: "PARTICIPANT_ID_MAX_LENGTH_ERROR",
        stringMin: "PARTICIPANT_ID_MIN_LENGTH_ERROR",
        required: "PARTICIPANT_ID_REQUIRED_ERROR",
        string: "PARTICIPANT_ID_TYPE_ERROR",
        unique: "PARTICIPANT_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    participants: {
      messages: {
        stringEmpty: "PARTICIPANTS_EMPTY_ERROR",
        length: "PARTICIPANTS_LENGTH_ERROR",
        required: "PARTICIPANTS_REQUIRED_ERROR",
        string: "PARTICIPANTS_TYPE_ERROR",
      },
      empty: false,
      length: 2,
      required: true,
      type: "array",
    },
    privateChats: {
      messages: {
        required: "PRIVATE_CHATS_REQUIRED_ERROR",
        string: "PRIVATE_CHATS_TYPE_ERROR",
      },
      required: true,
      type: "array",
    },
    senderId: {
      messages: {
        stringEmpty: "SENDER_ID_EMPTY_ERROR",
        stringMax: "SENDER_ID_MAX_LENGTH_ERROR",
        stringMin: "SENDER_ID_MIN_LENGTH_ERROR",
        required: "SENDER_ID_REQUIRED_ERROR",
        string: "SENDER_ID_TYPE_ERROR",
        unique: "SENDER_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    targetParticipantId: {
      messages: {
        stringEmpty: "TARGET_PARTICIPANT_ID_EMPTY_ERROR",
        stringMax: "TARGET_PARTICIPANT_ID_MAX_LENGTH_ERROR",
        stringMin: "TARGET_PARTICIPANT_ID_MIN_LENGTH_ERROR",
        required: "TARGET_PARTICIPANT_ID_REQUIRED_ERROR",
        string: "TARGET_PARTICIPANT_ID_TYPE_ERROR",
        unique: "TARGET_PARTICIPANT_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    id: {
      messages: {
        stringEmpty: "ID_EMPTY_ERROR",
        stringMax: "ID_MAX_LENGTH_ERROR",
        stringMin: "ID_MIN_LENGTH_ERROR",
        required: "ID_REQUIRED_ERROR",
        string: "ID_TYPE_ERROR",
        unique: "ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    bio: {
      messages: {
        stringEmpty: "BIO_EMPTY_ERROR",
        stringMax: "BIO_MAX_LENGTH_ERROR",
        stringMin: "BIO_MIN_LENGTH_ERROR",
        required: "BIO_REQUIRED_ERROR",
        string: "BIO_TYPE_ERROR",
      },
      empty: true,
      max: 255,
      min: 0,
      required: true,
      trim: true,
      type: "string",
    },
    avatarSrc: {
      messages: {
        stringEmpty: "AVATAR_SRC_EMPTY_ERROR",
        stringMax: "AVATAR_SRC_MAX_LENGTH_ERROR",
        stringMin: "AVATAR_SRC_MIN_LENGTH_ERROR",
        required: "AVATAR_SRC_REQUIRED_ERROR",
        string: "AVATAR_SRC_TYPE_ERROR",
      },
      empty: true,
      max: 800000,
      min: 0,
      required: true,
      trim: true,
      type: "string",
    },
    blacklist: {
      messages: {
        stringEmpty: "BLACKLIST_EMPTY_ERROR",
        required: "BLACKLIST_REQUIRED_ERROR",
        string: "BLACKLIST_TYPE_ERROR",
      },
      empty: true,
      required: true,
      type: "array",
    },
    sessionId: {
      messages: {
        stringEmpty: "SESSION_ID_EMPTY_ERROR",
        stringMax: "SESSION_ID_MAX_LENGTH_ERROR",
        stringMin: "SESSION_ID_MIN_LENGTH_ERROR",
        required: "SESSION_ID_REQUIRED_ERROR",
        string: "SESSION_ID_TYPE_ERROR",
        unique: "SESSION_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 150,
      min: 100,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    sessions: {
      messages: {
        stringEmpty: "SESSIONS_EMPTY_ERROR",
        required: "SESSIONS_REQUIRED_ERROR",
        string: "SESSIONS_TYPE_ERROR",
      },
      empty: true,
      required: true,
      type: "array",
    },
    contacts: {
      messages: {
        stringEmpty: "CONTACTS_EMPTY_ERROR",
        required: "CONTACTS_REQUIRED_ERROR",
        string: "CONTACTS_TYPE_ERROR",
      },
      empty: true,
      required: true,
      type: "array",
    },
    countryCode: {
      messages: {
        stringEmpty: "COUNTRY_CODE_EMPTY_ERROR",
        stringMax: "COUNTRY_CODE_MAX_LENGTH_ERROR",
        stringMin: "COUNTRY_CODE_MIN_LENGTH_ERROR",
        stringNumeric: "COUNTRY_CODE_NUMERIC_ERROR",
        required: "COUNTRY_CODE_REQUIRED_ERROR",
        string: "COUNTRY_CODE_TYPE_ERROR",
      },
      empty: false,
      max: 4,
      min: 1,
      numeric: true,
      required: true,
      trim: true,
      type: "string",
    },
    countryName: {
      messages: {
        stringEmpty: "COUNTRY_NAME_EMPTY_ERROR",
        stringMax: "COUNTRY_NAME_MAX_LENGTH_ERROR",
        stringMin: "COUNTRY_NAME_MIN_LENGTH_ERROR",
        required: "COUNTRY_NAME_REQUIRED_ERROR",
        string: "COUNTRY_NAME_TYPE_ERROR",
      },
      empty: false,
      max: 50,
      min: 2,
      required: true,
      trim: true,
      type: "string",
    },
    firstName: {
      messages: {
        stringEmpty: "FIRST_NAME_EMPTY_ERROR",
        stringMax: "FIRST_NAME_MAX_LENGTH_ERROR",
        stringMin: "FIRST_NAME_MIN_LENGTH_ERROR",
        required: "FIRST_NAME_REQUIRED_ERROR",
        string: "FIRST_NAME_TYPE_ERROR",
      },
      empty: false,
      max: 18,
      min: 2,
      required: true,
      trim: true,
      type: "string",
    },
    isActive: {
      messages: {
        required: "IS_ACTIVE_REQUIRED_ERROR",
        string: "IS_ACTIVE_TYPE_ERROR",
      },
      required: true,
      type: "boolean",
    },
    lastName: {
      messages: {
        stringEmpty: "LAST_NAME_EMPTY_ERROR",
        stringMax: "LAST_NAME_MAX_LENGTH_ERROR",
        stringMin: "LAST_NAME_MIN_LENGTH_ERROR",
        required: "LAST_NAME_REQUIRED_ERROR",
        string: "LAST_NAME_TYPE_ERROR",
      },
      empty: true,
      max: 18,
      min: 2,
      required: true,
      trim: true,
      type: "string",
    },
    macAddress: {
      messages: {
        stringEmpty: "MAC_ADDRESS_EMPTY_ERROR",
        stringMax: "MAC_ADDRESS_MAX_LENGTH_ERROR",
        stringMin: "MAC_ADDRESS_MIN_LENGTH_ERROR",
        required: "MAC_ADDRESS_REQUIRED_ERROR",
        string: "MAC_ADDRESS_TYPE_ERROR",
        unique: "MAC_ADDRESS_UNIQUE_ERROR",
      },
      empty: false,
      max: 16,
      min: 12,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    phoneNumber: {
      messages: {
        stringEmpty: "PHONE_NUMBER_EMPTY_ERROR",
        stringMax: "PHONE_NUMBER_MAX_LENGTH_ERROR",
        stringMin: "PHONE_NUMBER_MIN_LENGTH_ERROR",
        stringNumeric: "PHONE_NUMBER_NUMERIC_ERROR",
        required: "PHONE_NUMBER_REQUIRED_ERROR",
        string: "PHONE_NUMBER_TYPE_ERROR",
        unique: "PHONE_NUMBER_UNIQUE_ERROR",
      },
      empty: false,
      max: 14,
      min: 10,
      numeric: true,
      required: true,
      type: "string",
      unique: true,
    },
    status: {
      messages: {
        required: "STATUS_REQUIRED_ERROR",
        string: "STATUS_TYPE_ERROR",
      },
      required: true,
      type: "object",
    },
    userId: {
      messages: {
        stringEmpty: "USER_ID_EMPTY_ERROR",
        stringMax: "USER_ID_MAX_LENGTH_ERROR",
        stringMin: "USER_ID_MIN_LENGTH_ERROR",
        required: "USER_ID_REQUIRED_ERROR",
        string: "USER_ID_TYPE_ERROR",
        unique: "USER_ID_UNIQUE_ERROR",
      },
      empty: false,
      max: 35,
      min: 30,
      required: true,
      trim: true,
      type: "string",
      unique: true,
    },
    username: {
      messages: {
        stringEmpty: "USERNAME_EMPTY_ERROR",
        stringMax: "USERNAME_MAX_LENGTH_ERROR",
        stringMin: "USERNAME_MIN_LENGTH_ERROR",
        required: "USERNAME_REQUIRED_ERROR",
        string: "USERNAME_TYPE_ERROR",
        unique: "USERNAME_UNIQUE_ERROR",
      },
      empty: true,
      max: 12,
      min: 0,
      required: true,
      trim: true,
      type: "string",
      unique: false,
    },
    verificationCode: {
      messages: {
        stringEmpty: "VERIFICATION_CODE_EMPTY_ERROR",
        length: "VERIFICATION_CODE_LENGTH_ERROR",
        stringNumeric: "VERIFICATION_CODE_NUMERIC_ERROR",
        required: "VERIFICATION_CODE_REQUIRED_ERROR",
        string: "VERIFICATION_CODE_TYPE_ERROR",
      },
      empty: false,
      length: 6,
      numeric: true,
      required: true,
      trim: true,
      type: "string",
    },
  },
} as const;
